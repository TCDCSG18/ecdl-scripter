#-----------------------------------------------------
# page settings
#-----------------------------------------------------

docx.page_numbers true do
  align :center
end

docx.font name: 'Arial'

docx.style id: 'AltFont', name: 'altFont', font: 'Palatino'


#-----------------------------------------------------
# cover
#-----------------------------------------------------

7.times do
  docx.p
end
data = Base64.encode64(File.read('public/logo.png'))
docx.img 'public/logo.png', data: data, width: 400, height: 124, align: :center


12.times do
  docx.p
end
docx.p 'Caracal Library', style: 'Title', align: :right
docx.p 'Capabilities Overview', style: 'Subtitle', align: :right
docx.p
docx.p
docx.p Date.today.strftime('%B %d, %Y'), color: '666666', align: :right


#-----------------------------------------------------
# test questions
#-----------------------------------------------------

docx.page

@test_script.syllabus_item.questions
  .where("belongs_to_test_#{@test_script.syllabus_item.test_scripts.index(@test_script)}" => true)
  .shuffle.each do |question, i|

  docx.p question.stem
  if question.image.exists?
    url = question.image.url.split('?')[0...-1].join('?')
    image_data = File.read('public' + url)
    docx.img 'https://www.example.com/logo.png' do
      data    image_data  # sets the file data directly instead of opening the url
      width   100       # sets the image width. units specified in pixels.
      height  100       # sets the image height. units specified in pixels.
      align   :center    # controls the justification of the image. default is :left.
      top     10        # sets the top margin. units specified in pixels.
      bottom  10        # sets the bottom margin. units specified in pixels.
      left    10        # sets the left margin. units specified in pixels.
      right   10        # sets the right margin. units specified in pixels.
    end
  end

  question.answers.shuffle.each do |answer|
    docx.p answer.text

    if answer.image.exists?
      url = answer.image.url.split('?')[0...-1].join('?')
      image_data = File.read('public' + url)
      docx.img 'https://www.example.com/logo.png' do
        data    image_data  # sets the file data directly instead of opening the url
        width   100       # sets the image width. units specified in pixels.
        height  100       # sets the image height. units specified in pixels.
        align   :center    # controls the justification of the image. default is :left.
        top     10        # sets the top margin. units specified in pixels.
        bottom  10        # sets the bottom margin. units specified in pixels.
        left    10        # sets the left margin. units specified in pixels.
        right   10        # sets the right margin. units specified in pixels.
      end
    end
  end
end
